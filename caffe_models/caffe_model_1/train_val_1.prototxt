name : "CropClassification"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
          }
  transform_param {
    crop_size: 128
    scale : 0.00390625

                  }
  data_param {
    source: "/home/ubuntu/DeepLearning_crop_classification/input/train_lmdb"
    backend: LMDB
    batch_size: 6
           }
       }
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
          }
  transform_param {
    mirror: false
    crop_size: 128
    scale: 0.00390625
                  }
  data_param {
    source: "/home/ubuntu/DeepLearning_crop_classification/input/validation_lmdb"
    backend: LMDB
    batch_size: 6
             }
       }
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
        }
  param {
    lr_mult: 2
    decay_mult: 0
        }
  convolution_param {
    num_output: 5
    kernel_size: 8
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
                  }
    bias_filler {
      type: "constant"
      value: 0
                }
                    }
        }
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
      }
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
                }
      }
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "fc1"
  param {
    lr_mult: 1
    decay_mult: 1
        }
  param {
    lr_mult: 2
    decay_mult: 0
        }
  inner_product_param {
    num_output: 1125
    weight_filler {
      type: "gaussian"
      std: 0.005
                  }
    bias_filler {
      type: "constant"
      value: 1
                }
                      }
       }
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
      }
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    lr_mult: 1
    decay_mult: 1
        }
  param {
    lr_mult: 2
    decay_mult: 0
        }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "gaussian"
      std: 0.01
                  }
    bias_filler {
      type: "constant"
      value: 0
                }
                      }
       }
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
          }
      }
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc2"
  bottom: "label"
  top: "loss"
     }
